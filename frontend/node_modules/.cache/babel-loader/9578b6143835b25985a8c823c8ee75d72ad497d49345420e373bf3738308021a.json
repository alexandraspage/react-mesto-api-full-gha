{"ast":null,"code":"import _classCallCheck from\"/Users/macbook/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/macbook/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;this._headers=config.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject('Произошла ошибка');}},{key:\"getInfo\",value:function getInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"GET\",headers:this._headers}).then(this._checkResponse);}},{key:\"getAllCards\",value:function getAllCards(){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"GET\",headers:this._headers}).then(this._checkResponse);}},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"changeUserInfo\",value:function changeUserInfo(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:data.profileName,about:data.profileDescription})}).then(this._checkResponse);}},{key:\"changeAvatar\",value:function changeAvatar(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse);}},{key:\"putLike\",value:function putLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:\"PUT\",headers:this._headers}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}}]);return Api;}();var api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-62',headers:{'content-type':'application/json',authorization:'54af3b55-0841-4bd8-b43e-31656348522b'}});export default api;","map":{"version":3,"names":["Api","config","_classCallCheck","_url","url","_headers","headers","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","getInfo","fetch","concat","method","then","getAllCards","addCard","data","body","JSON","stringify","name","link","changeUserInfo","profileName","about","profileDescription","changeAvatar","avatar","putLike","cardId","deleteLike","deleteCard","api","authorization"],"sources":["/Users/macbook/dev/mesto-react/src/utils/Api.js"],"sourcesContent":[" class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json()\n        }\n        return Promise.reject('Произошла ошибка');\n    }\n\n    getInfo() {\n        return fetch(`${this._url}/users/me`, {\n            method: \"GET\",\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n\n    getAllCards() {\n        return fetch(`${this._url}/cards`, {\n            method: \"GET\",\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n    addCard(data) {\n        return fetch(`${this._url}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._checkResponse)\n    }\n    changeUserInfo(data) {\n\n        return fetch(`${this._url}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.profileName,\n                about: data.profileDescription\n            })\n        })\n            .then(this._checkResponse)\n\n    }\n    changeAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n            .then(this._checkResponse)\n    }\n    putLike(cardId) {\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n            method: \"PUT\",\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n    deleteLike(cardId) {\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n}\n\n\nconst api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-62',\n    headers: {\n      'content-type': 'application/json',\n      authorization: '54af3b55-0841-4bd8-b43e-31656348522b'\n    }\n  })\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
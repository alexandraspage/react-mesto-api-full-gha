{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('Произошла ошибка');\n  }\n  getInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  getAllCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n  changeUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.profileName,\n        about: data.profileDescription\n      })\n    }).then(this._checkResponse);\n  }\n  changeAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-62',\n  headers: {\n    'content-type': 'application/json',\n    authorization: '54af3b55-0841-4bd8-b43e-31656348522b'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_checkResponse","res","ok","json","Promise","reject","getInfo","fetch","method","then","getAllCards","addCard","data","body","JSON","stringify","name","link","changeUserInfo","profileName","about","profileDescription","changeAvatar","avatar","putLike","cardId","deleteLike","deleteCard","api","authorization"],"sources":["/Users/macbook/dev/mesto-react/src/utils/Api.js"],"sourcesContent":[" class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json()\n        }\n        return Promise.reject('Произошла ошибка');\n    }\n\n    getInfo() {\n        return fetch(`${this._url}/users/me`, {\n            method: \"GET\",\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n\n    getAllCards() {\n        return fetch(`${this._url}/cards`, {\n            method: \"GET\",\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n    addCard(data) {\n        return fetch(`${this._url}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._checkResponse)\n    }\n    changeUserInfo(data) {\n\n        return fetch(`${this._url}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.profileName,\n                about: data.profileDescription\n            })\n        })\n            .then(this._checkResponse)\n\n    }\n    changeAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n            .then(this._checkResponse)\n    }\n    putLike(cardId) {\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n            method: \"PUT\",\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n    deleteLike(cardId) {\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n}\n\n\nconst api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-62',\n    headers: {\n      'content-type': 'application/json',\n      authorization: '54af3b55-0841-4bd8-b43e-31656348522b'\n    }\n  })\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
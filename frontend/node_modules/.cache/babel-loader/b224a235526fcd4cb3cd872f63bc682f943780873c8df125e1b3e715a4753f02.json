{"ast":null,"code":"export const baseUrl = 'https://auth.nomoreparties.co';\nexport function register(_ref) {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    try {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return Promise.reject('Произошла ошибка');\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  });\n}","map":{"version":3,"names":["baseUrl","register","_ref","email","password","fetch","method","headers","body","JSON","stringify","then","res","status","json","Promise","reject","e"],"sources":["/Users/macbook/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const baseUrl = 'https://auth.nomoreparties.co';\n\nexport function register({email, password}){\n    return fetch(`${baseUrl}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({email, password})\n    })\n    .then((res) => {\n        try{\n            if(res.status === 200){\n                return res.json();\n            } else {\n            return Promise.reject('Произошла ошибка');\n            }\n        } catch(e){\n            return (e)\n        }\n    })\n    .then((res) => {\n        return res;\n    })\n}"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,+BAA+B;AAEtD,OAAO,SAASC,QAAQA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACtC,OAAOG,KAAK,CAAE,GAAEL,OAAQ,SAAQ,EAAE;IAC9BM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EAC5C,CAAC,CAAC,CACDO,IAAI,CAAEC,GAAG,IAAK;IACX,IAAG;MACC,IAAGA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAC;QAClB,OAAOD,GAAG,CAACE,IAAI,EAAE;MACrB,CAAC,MAAM;QACP,OAAOC,OAAO,CAACC,MAAM,CAAC,kBAAkB,CAAC;MACzC;IACJ,CAAC,CAAC,OAAMC,CAAC,EAAC;MACN,OAAQA,CAAC;IACb;EACJ,CAAC,CAAC,CACDN,IAAI,CAAEC,GAAG,IAAK;IACX,OAAOA,GAAG;EACd,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}